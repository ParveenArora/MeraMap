#!/bin/sh

# Include gpsd defaults if available
if [ -f /etc/default/openstreetmap-mapnik-data ] ; then
    . /etc/default/openstreetmap-mapnik-data
else
    echo "No Config for osm-data-mapnik found"
fi

if [ "x$INIT_DB" = "xtrue" ] ; then

    echo "Initializing Database"

    echo "Initializing Spatial Extentions"
    file_lwpostgis=/usr/share/postgresql-8.2-postgis/lwpostgis.sql
    test -s $file_lwpostgis || file_lwpostgis=/usr/share/postgresql-8.1-postgis/lwpostgis.sql

    sudo -u postgres psql -Upostgres gis <$file_lwpostgis >/dev/null 2>&1
    echo "Spatial Extentions initialized"

    echo "Removing Old Database"
    sudo -u postgres dropdb gis >/dev/null 2>&1
    
    echo "Creating Database"
    sudo -u postgres createdb -T template0 -Upostgres  -EUTF8 gis

    sudo -u postgres createuser -Upostgres --no-superuser --no-createdb --no-createrole "osm"
fi
if [ "x$INIT_DB" = "xtrue" ] ; then
    
    echo "Granting rights to user osm"
    
    echo "GRANT ALL on geometry_columns TO \"osm\";"| sudo -u postgres psql -Upostgres gis || true
    echo "GRANT ALL ON SCHEMA PUBLIC TO \"osm\";"| sudo -u postgres psql -Upostgres gis || true
    echo "GRANT ALL on spatial_ref_sys TO \"osm\";"| sudo -u postgres psql -Upostgres gis || true
    
    
    echo "Importing data into postGIS Database"
    gunzip -dc /var/tmp/mapnik-osm-gis.sql.gz | \
	sed "s/tweety/osm/g" | \
	sudo -u postgres  psql -Upostgres gis 2>&1 | \
	grep -v -E  \
	-e "^ALTER AGGREGATE$" \
	-e "^ALTER DATABASE$" \
	-e "^ALTER FUNCTION$" \
	-e "^ALTER OPERATOR CLASS$" \
	-e "^ALTER OPERATOR$" \
	-e "^ALTER TABLE$" \
	-e "^ALTER TYPE$" \
	-e "^COMMENT$" \
	-e "^CREATE AGGREGATE$" \
	-e "^CREATE CAST$" \
	-e "^CREATE FUNCTION$" \
	-e "^CREATE LANGUAGE$" \
	-e "^CREATE OPERATOR CLASS$" \
	-e "^CREATE OPERATOR$" \
	-e "^CREATE TABLE$" \
	-e "^CREATE TYPE$" \
	-e "^DROP FUNCTION$" \
	-e "^SET$" \
	-e '^ALTER AGGREGATE$' \
	-e '^ALTER FUNCTION$'  \
	-e '^ALTER OPERATOR CLASS$' \
	-e '^ALTER OPERATOR$' \
	-e '^ALTER SCHEMA$' \
	-e '^ALTER TABLE$' \
	-e '^ALTER TYPE$' \
	-e '^COMMENT$' \
	-e '^CREATE AGGREGATE$' \
	-e '^CREATE CAST$' \
	-e '^CREATE FUNCTION$' \
	-e '^CREATE LANGUAGE$' \
	-e '^CREATE OPERATOR CLASS$' \
	-e '^CREATE OPERATOR$' \
	-e '^CREATE SCHEMA$' \
	-e '^CREATE TABLE$' \
	-e '^CREATE TYPE$' \
	-e '^DROP AGGREGATE$' \
	-e '^DROP CAST$' \
	-e '^DROP FUNCTION$' \
	-e '^DROP INDEX$' \
	-e '^DROP LANGUAGE$' \
	-e '^DROP OPERATOR CLASS$' \
	-e '^DROP OPERATOR$' \
	-e '^DROP SCHEMA$' \
	-e '^DROP TABLE$' \
	-e '^DROP TYPE$' \
	-e '^GRANT$' \
	-e '^REVOKE$' \
	-e '^SET$' \
	-e 'already exists with same argument types'

else
    echo "Let the Database alone"
fi


if [ -n "$GRANT_USER" ] ; then

    if [ "$GRANT_USER" = "*" ] ; then
	echo "GRANT Rights to every USER"
	GRANT_USER=''
	for user in `users` ; do 
	    GRANT_USER="$GRANT_USER $user"
	done
    fi

    for user in $GRANT_USER; do
	sudo -u postgres createuser -Upostgres --no-superuser --no-createdb --no-createrole "$user"
	echo "Granting rights to user '$user'"
	(
	    echo "GRANT ALL on geometry_columns TO \"$user\";"
	    echo "GRANT ALL ON SCHEMA PUBLIC TO \"$user\";"
	    echo "GRANT ALL on spatial_ref_sys TO \"$user\";"
	    )| sudo -u postgres psql -Upostgres gis || true
    done
else
    echo "No extra user for postgress Database created. Please do so yourself"
fi

exit 0
